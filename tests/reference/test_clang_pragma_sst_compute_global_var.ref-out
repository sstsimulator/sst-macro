
int bound_i = 5;void* __ptr_bound_i = &bound_i; int __sizeof_bound_i = sizeof(bound_i); extern int __offset_bound_i; 
int bound_j = 10;void* __ptr_bound_j = &bound_j; int __sizeof_bound_j = sizeof(bound_j); extern int __offset_bound_j; 

int fxn()
{ char* sstmac_global_data = get_sstmac_global_data();int* sstmac_bound_i=(int*)(sstmac_global_data + __offset_bound_i); int* sstmac_bound_j=(int*)(sstmac_global_data + __offset_bound_j); {
  int i=0;
  int mul = 0;
  double* x = new double[10];
  int* idx = new int[5];

 { uint64_t flops=0; uint64_t readBytes=0; uint64_t writeBytes=0; uint64_t intops=0; {  uint64_t tripCount0=((((*sstmac_bound_i))-(0)));  intops += tripCount0*1;{  uint64_t tripCount1=tripCount0*((((*sstmac_bound_j))-(0)));  flops += tripCount1*1; readBytes += tripCount1*36; writeBytes += tripCount1*12; intops += tripCount1*16;}}sstmac_compute_detailed(flops,intops,readBytes); }












  return 0;
 }}
#include <sstmac/software/process/global.h>

extern int __sizeof_bound_i;
extern void* __ptr_bound_i;
int __offset_bound_i = sstmac::GlobalVariable::init(__sizeof_bound_i,"bound_i",__ptr_bound_i,false);
extern int __sizeof_bound_j;
extern void* __ptr_bound_j;
int __offset_bound_j = sstmac::GlobalVariable::init(__sizeof_bound_j,"bound_j",__ptr_bound_j,false);
